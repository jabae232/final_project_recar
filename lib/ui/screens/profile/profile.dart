import 'package:car_m/constants/app_assets.dart';import 'package:car_m/resources/constants/notifierProvider.dart';import 'package:car_m/ui/screens/profile/profile_model.dart';import 'package:car_m/ui/screens/profile/widgets/all_posts.dart';import 'package:car_m/ui/screens/profile/widgets/post/post_widget_profile.dart';import 'package:car_m/ui/screens/profile/widgets/saves_screen/saves_profile.dart';import 'package:flutter/material.dart';import 'package:google_fonts/google_fonts.dart';import 'package:flutter_gen/gen_l10n/app_localizations.dart';import '../../../constants/app_colors.dart';import '../../../constants/app_styles.dart';import '../chat/chat_screen.dart';class ProfileWidget extends StatefulWidget {  const ProfileWidget({super.key, required this.id});  final String id;  @override  State<ProfileWidget> createState() => _ProfileWidgetState();}class _ProfileWidgetState extends State<ProfileWidget> {  @override  Widget build(BuildContext context) {    final model = ProfileWidgetModel(id: widget.id);    return NotifierProvider(      model: model,      child: ProfileWidgetBody(        id: widget.id,      ),    );  }}class ProfileWidgetBody extends StatefulWidget {  const ProfileWidgetBody({super.key, required this.id});  final String id;  @override  State<ProfileWidgetBody> createState() => _ProfileWidgetBodyState();}class _ProfileWidgetBodyState extends State<ProfileWidgetBody>    with SingleTickerProviderStateMixin {  late TabController tabController;  @override  void initState() {    super.initState();    tabController = TabController(length: 3, vsync: this);  }  @override  void dispose() {    tabController.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    final model = NotifierProvider.watch<ProfileWidgetModel>(context);    if (model == null)      return const Center(        child: CircularProgressIndicator(),      );    final parameters = model.user;    final style = GoogleFonts.poppins(textStyle: AppStyles.s13w400)        .copyWith(color: AppColors.mainBlack);    return Scaffold(      body: NestedScrollView(        headerSliverBuilder: (BuildContext context, bool innerBoxIsScrolled) {          return <Widget>[            SliverAppBar(              leading: const BackButton(),              backgroundColor: Colors.black,              pinned: true,              snap: false,              floating: false,              title: Text('@${parameters?.login}'),              expandedHeight: 140.0,              flexibleSpace: FlexibleSpaceBar(                collapseMode: CollapseMode.parallax,                background: Image.asset(                  AppAssets.images.testBackGroundProfile,                  fit: BoxFit.fitWidth,                ),              ),            ),            SliverToBoxAdapter(              child: SizedBox(                  child: Container(                padding: const EdgeInsets.all(13),                color: AppColors.mainBlack,                child: Column(                  children: [                    Row(                      children: [                        CircleAvatar(                          radius: 46,                          backgroundImage:                              AssetImage(AppAssets.images.testProfile),                        ),                        const SizedBox(                          width: 18,                        ),                        Column(                          children: [                            Text(                              '${parameters?.fullName}',                              style: GoogleFonts.inter(                                      textStyle: AppStyles.s24w700)                                  .copyWith(color: AppColors.mainWhite),                            ),                            Text(                              '@${parameters?.login}',                              style: GoogleFonts.inter(                                      textStyle: AppStyles.s16w400)                                  .copyWith(color: AppColors.mainWhite),                            ),                          ],                        )                      ],                    ),                    Padding(                      padding: const EdgeInsets.symmetric(vertical: 30),                      child: Row(                        children: [                          Expanded(                            child: InkWell(                              onTap: () => model.checkFollowers(context),                              child: Column(                                children: [                                  Text('${parameters?.followers ?? 0}',                                      style: GoogleFonts.inter(                                              textStyle: AppStyles.s24w700)                                          .copyWith(                                              color: AppColors.mainWhite)),                                  Text(                                      "${AppLocalizations.of(context)?.followers}",                                      style: GoogleFonts.inter(                                              textStyle: AppStyles.s16w400)                                          .copyWith(                                              color: AppColors.mainWhite)),                                ],                              ),                            ),                          ),                          Expanded(                            child: InkWell(                                onTap: () => model.checkFollowings(context),                                child: Column(                                  children: [                                    Text(                                      '${parameters?.followings ?? 0}',                                      style: GoogleFonts.inter(                                              textStyle: AppStyles.s24w700)                                          .copyWith(color: AppColors.mainWhite),                                    ),                                    Text(                                        "${AppLocalizations.of(context)?.followings}",                                        style: GoogleFonts.inter(                                                textStyle: AppStyles.s16w400)                                            .copyWith(                                                color: AppColors.mainWhite)),                                  ],                                )),                          ),                          Expanded(                            child: Column(                              children: [                                Text('${parameters?.clubs ?? 0}',                                    style: GoogleFonts.inter(                                            textStyle: AppStyles.s24w700)                                        .copyWith(color: AppColors.mainWhite)),                                Text("${AppLocalizations.of(context)?.clubs}",                                    style: GoogleFonts.inter(                                            textStyle: AppStyles.s16w400)                                        .copyWith(color: AppColors.mainWhite)),                              ],                            ),                          )                        ],                      ),                    ),                    const SizedBox(                      height: 15,                    ),                    Row(                      children: [                        Expanded(                          child: SizedBox(                            width: 121,                            child: ElevatedButton(                              onPressed:                                  model.followed ? null : () => model.follow(),                              style: ElevatedButton.styleFrom(                                  shape: const RoundedRectangleBorder(                                borderRadius:                                    BorderRadius.all(Radius.circular(20)),                              )),                              child: Text(                                "${AppLocalizations.of(context)?.follow}",                                style: GoogleFonts.poppins(                                    textStyle: AppStyles.s14w500),                              ),                            ),                          ),                        ),                        const SizedBox(                          width: 20,                        ),                        Expanded(                          child: SizedBox(                            width: 121,                            child: ElevatedButton(                                onPressed: () => Navigator.push(                                    context,                                    MaterialPageRoute(                                        builder: (context) => ChatScreen())),                                style: ElevatedButton.styleFrom(                                    backgroundColor: AppColors.mainWhite,                                    foregroundColor: AppColors.mainBlack,                                    shape: const RoundedRectangleBorder(                                      borderRadius:                                          BorderRadius.all(Radius.circular(20)),                                    )),                                child: Text(                                  "${AppLocalizations.of(context)?.message}",                                  style: GoogleFonts.poppins(                                      textStyle: AppStyles.s14w500),                                )),                          ),                        ),                      ],                    )                  ],                ),              )),            ),          ];        },        body: Column(          children: [            Padding(              padding: const EdgeInsets.symmetric(horizontal: 60),              child: TabBar(                controller: tabController,                tabs: [                  Tab(                    child: Text(                      "${AppLocalizations.of(context)?.all}",                      style: style,                    ),                  ),                  Tab(                    child: Text(                      "${AppLocalizations.of(context)?.posts}",                      style: style,                    ),                  ),                  Tab(                    child: FittedBox(                        child: Text(                      "${AppLocalizations.of(context)?.saves}",                      style: style,                      maxLines: 1,                    )),                  )                ],              ),            ),            Expanded(              child: Padding(                padding: const EdgeInsets.symmetric(horizontal: 6),                child: TabBarView(                  controller: tabController,                  children: [                    const PostsWidget(),                    SinglePostWidgetProfile(                      id: widget.id,                    ),                    SavesScreenProfile(id: widget.id),                  ],                ),              ),            ),          ],        ),      ),    );  }}